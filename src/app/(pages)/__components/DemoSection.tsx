'use client';
import React, { useState } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Separator } from "@/components/ui/separator";
import { Badge } from "@/components/ui/badge";
import { ArrowRight, Clock, Sparkles, FileText } from "lucide-react";

interface DemoSectionProps {
  title?: string;
  description?: string;
}

const DemoSection = ({
  title = "Try Our AI Summarizer",
  description = "Experience the power of our AI summarization tool. Paste your text or try one of our samples.",
}: DemoSectionProps) => {
  const [inputText, setInputText] = useState("");
  const [summary, setSummary] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [wordCount, setWordCount] = useState(0);

  const sampleTexts = [
    {
      title: "Research Paper",
      text: "Recent advances in artificial intelligence have revolutionized natural language processing. Deep learning models like transformers have enabled significant improvements in text summarization, translation, and generation. These models leverage attention mechanisms to understand context and relationships between words, resulting in more coherent and contextually relevant outputs. Despite these advances, challenges remain in areas such as factual consistency, bias mitigation, and computational efficiency. Researchers are actively working on addressing these limitations through techniques like knowledge distillation, sparse attention, and retrieval-augmented generation.",
    },
    {
      title: "News Article",
      text: "The global climate summit concluded yesterday with major nations pledging to reduce carbon emissions by 50% before 2030. Representatives from over 190 countries attended the two-week conference, which focused on implementing the Paris Agreement goals. The final agreement includes provisions for financial support to developing nations and stricter monitoring of emission reduction efforts. Environmental activists called the agreement a step forward but criticized the lack of binding commitments. Business leaders expressed concerns about economic impacts but acknowledged the necessity of transition to renewable energy sources.",
    },
    {
      title: "Business Report",
      text: "Q3 financial results exceeded expectations with revenue growth of 15% year-over-year. The company's digital transformation initiatives contributed significantly to this performance, with online sales increasing by 28%. Operating margins improved by 2.5 percentage points due to efficiency measures implemented across departments. The board has approved a share buyback program of $500 million to be executed over the next 12 months. Looking ahead, management expects continued growth in Q4 despite supply chain challenges and increasing raw material costs. The company plans to expand into three new markets in the coming fiscal year.",
    },
  ];

  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    const text = e.target.value;
    setInputText(text);
    setWordCount(text.split(/\s+/).filter((word) => word !== "").length);
  };

  const handleSampleSelect = (text: string) => {
    setInputText(text);
    setWordCount(text.split(/\s+/).filter((word) => word !== "").length);
  };

  const handleSummarize = () => {
    if (!inputText.trim()) return;

    setIsLoading(true);

    // Simulate API call with timeout
    setTimeout(() => {
      // This is a mock summary - in a real app, you would call your API
      const mockSummary = `This is a simulated AI summary of the text you provided. 
      In a real implementation, this would be generated by calling your summarization API. 
      The summary would be concise while preserving the key points from the original text.`;

      setSummary(mockSummary);
      setIsLoading(false);
    }, 1500);
  };

  const clearAll = () => {
    setInputText("");
    setSummary("");
    setWordCount(0);
  };

  return (
    <section className="w-full py-16 px-4 ">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-10">
          <h2 className="text-3xl font-bold tracking-tight text-slate-900 mb-2">
            {title}
          </h2>
          <p className="text-slate-600 max-w-2xl mx-auto">{description}</p>
        </div>

        <Card className="bg-white shadow-lg border-0">
          <CardHeader>
            <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
              <div>
                <CardTitle className="text-xl">Summarization Tool</CardTitle>
                <CardDescription>
                  Enter text or choose a sample to summarize
                </CardDescription>
              </div>
              <div className="flex items-center gap-2">
                <Badge variant="outline" className="flex items-center gap-1">
                  <Clock className="h-3 w-3" /> Fast Results
                </Badge>
                <Badge variant="outline" className="flex items-center gap-1">
                  <Sparkles className="h-3 w-3" /> AI-Powered
                </Badge>
              </div>
            </div>
          </CardHeader>

          <CardContent>
            <Tabs defaultValue="input" className="w-full">
              <TabsList className="grid w-full grid-cols-2 mb-6">
                <TabsTrigger value="input">Input Text</TabsTrigger>
                <TabsTrigger value="samples">Sample Texts</TabsTrigger>
              </TabsList>

              <TabsContent value="input" className="space-y-4">
                <div className="space-y-2">
                  <div className="flex items-center justify-between">
                    <label className="text-sm font-medium">Your Text</label>
                    <span className="text-xs text-slate-500">
                      {wordCount} words
                    </span>
                  </div>
                  <Textarea
                    placeholder="Paste or type the text you want to summarize here..."
                    className="min-h-[200px] resize-none"
                    value={inputText}
                    onChange={handleTextChange}
                  />
                </div>
              </TabsContent>

              <TabsContent value="samples" className="space-y-4">
                <div className="grid gap-4 md:grid-cols-3">
                  {sampleTexts.map((sample, index) => (
                    <Card
                      key={index}
                      className="cursor-pointer hover:bg-slate-50 transition-colors"
                      onClick={() => handleSampleSelect(sample.text)}
                    >
                      <CardHeader className="pb-2">
                        <CardTitle className="text-lg">
                          {sample.title}
                        </CardTitle>
                      </CardHeader>
                      <CardContent className="pt-0">
                        <p className="text-sm text-slate-600 line-clamp-3">
                          {sample.text}
                        </p>
                      </CardContent>
                      <CardFooter>
                        <Button
                          variant="ghost"
                          size="sm"
                          className="w-full justify-start"
                        >
                          <FileText className="mr-2 h-4 w-4" /> Use this sample
                        </Button>
                      </CardFooter>
                    </Card>
                  ))}
                </div>
              </TabsContent>
            </Tabs>

            <div className="flex justify-between items-center mt-6">
              <Button variant="outline" onClick={clearAll}>
                Clear
              </Button>
              <Button
                onClick={handleSummarize}
                disabled={isLoading || inputText.trim().length === 0}
                className="bg-gradient-to-r from-blue-600 to-teal-500 hover:from-blue-700 hover:to-teal-600"
              >
                {isLoading ? "Summarizing..." : "Summarize"}{" "}
                <ArrowRight className="ml-2 h-4 w-4" />
              </Button>
            </div>

            {summary && (
              <div className="mt-8">
                <Separator className="my-4" />
                <div className="space-y-2">
                  <h3 className="font-medium text-lg">Summary Result</h3>
                  <div className="p-4 bg-slate-50 rounded-md border border-slate-200">
                    <p className="whitespace-pre-line">{summary}</p>
                  </div>
                </div>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </section>
  );
};

export default DemoSection;
